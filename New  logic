multi_rate_query = RATE_QUERIES.get("get_rate_with_payment_methods")
        if not multi_rate_query:
            logger.error("get_rate_with_payment_methods not found in RATE_QUERIES")
            return "NA"

        rate_rows = await self.db.execute_query(multi_rate_query, updated_params)

        if not rate_rows:
            logger.info("No rate rows found for payment methods")
            return "NA"

        if len(rate_rows) == 1:
            rate = self._extract_single_value(rate_rows, column_index=1)
            return rate

        # Multiple payment methods found â€” use hierarchy
        hierarchy = self.db.cache.get("payment_method_hierarchy", {})
        selected_method = min(
            (row[0] for row in rate_rows if row[0] in hierarchy),
            key=lambda x: hierarchy.get(x, float("inf")),
            default=None,
        )

        if selected_method is None:
            logger.warning("No matching payment method found in hierarchy")
            return "NA"

        for row in rate_rows:
            if row[0] == selected_method:
                return str(row[1])
